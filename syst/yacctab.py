
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTR pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n                    | AND type_qualifier_list_opt\n                    | AND type_qualifier_list_opt pointer\n         enum_specifier : ENUM ID COLON declaration_specifiers brace_open enumerator_list brace_close\n                           | ENUM TYPEID COLON declaration_specifiers brace_open enumerator_list brace_close\n        abstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit_or_empty':([0,],[1,]),'translation_unit':([0,],[2,]),'empty':([0,10,11,17,18,19,22,26,27,61,62,63,80,81,108,116,117,118,119,128,148,154,174,217,218,219,240,241,270,275,280,285,361,362,370,371,385,393,399,434,446,447,464,465,467,468,470,502,512,514,516,527,530,],[3,58,70,84,84,84,90,96,96,70,90,58,96,124,153,96,124,225,96,238,261,269,269,339,225,96,366,225,269,269,238,269,96,124,225,366,269,366,269,481,225,96,269,481,269,269,269,269,269,481,269,269,269,]),'external_declaration':([0,2,],[4,56,]),'function_definition':([0,2,],[5,5,]),'declaration':([0,2,10,59,63,108,154,285,],[6,6,60,109,60,156,156,399,]),'pp_directive':([0,2,],[7,7,]),'pppragma_directive':([0,2,108,154,174,270,275,385,464,467,468,512,527,530,],[8,8,164,164,164,164,164,164,164,164,164,164,164,164,]),'id_declarator':([0,2,11,22,24,61,62,72,113,128,131,148,240,381,],[10,10,63,93,94,110,93,94,110,233,110,110,94,110,]),'declaration_specifiers':([0,2,10,59,63,81,108,117,137,142,154,231,240,285,362,371,393,],[11,11,61,61,61,128,61,128,246,252,61,128,128,61,128,128,128,]),'decl_body':([0,2,10,59,63,108,154,285,],[12,12,12,12,12,12,12,12,]),'direct_id_declarator':([0,2,11,16,22,24,61,62,69,72,113,128,131,148,236,240,365,381,],[15,15,15,82,15,15,15,15,82,15,15,15,15,15,82,15,82,15,]),'pointer':([0,2,11,22,24,61,62,72,95,99,113,128,131,148,240,280,381,393,],[16,16,69,16,16,69,16,69,134,136,69,236,69,69,365,392,69,392,]),'type_qualifier':([0,2,10,11,17,18,19,26,27,59,61,63,80,81,97,106,108,116,117,119,120,128,137,142,144,145,146,148,151,154,170,219,220,231,240,246,252,254,255,274,280,285,329,333,336,361,362,371,393,447,448,],[17,17,17,64,17,17,17,98,98,17,64,17,98,17,135,98,17,98,17,98,135,64,17,17,98,98,98,260,135,17,98,98,135,17,17,64,64,98,98,98,260,17,98,98,98,98,17,17,17,98,135,]),'storage_class_specifier':([0,2,10,11,17,18,19,59,61,63,81,108,117,128,137,142,154,231,240,246,252,285,362,371,393,],[18,18,18,65,18,18,18,18,65,18,18,18,18,65,18,18,18,18,18,65,65,18,18,18,18,]),'function_specifier':([0,2,10,11,17,18,19,59,61,63,81,108,117,128,137,142,154,231,240,246,252,285,362,371,393,],[19,19,19,66,19,19,19,19,66,19,19,19,19,66,19,19,19,19,19,66,66,19,19,19,19,]),'type_specifier_no_typeid':([0,2,10,11,22,59,61,62,63,81,106,108,117,128,130,137,142,144,145,146,148,151,154,170,231,240,246,252,254,255,274,280,285,329,333,336,362,371,393,],[20,20,20,67,20,20,67,20,20,20,20,20,20,67,20,20,20,20,20,20,259,20,20,20,20,20,67,67,20,20,20,259,20,20,20,20,20,20,20,]),'type_specifier':([0,2,10,22,59,62,63,81,106,108,117,130,137,142,144,145,146,151,154,170,231,240,254,255,274,285,329,333,336,362,371,393,],[21,21,21,88,21,88,21,21,150,21,21,88,21,21,150,150,150,266,21,150,21,21,150,150,150,21,150,150,150,21,21,21,]),'declaration_specifiers_no_type':([0,2,10,17,18,19,59,63,81,108,117,137,142,154,231,240,285,362,371,393,],[22,22,62,85,85,85,62,62,130,62,130,130,130,62,130,130,62,130,130,130,]),'typedef_name':([0,2,10,22,59,62,63,81,106,108,117,130,137,142,144,145,146,151,154,170,231,240,254,255,274,285,329,333,336,362,371,393,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'enum_specifier':([0,2,10,22,59,62,63,81,106,108,117,130,137,142,144,145,146,151,154,170,231,240,254,255,274,285,329,333,336,362,371,393,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'struct_or_union_specifier':([0,2,10,22,59,62,63,81,106,108,117,130,137,142,144,145,146,151,154,170,231,240,254,255,274,285,329,333,336,362,371,393,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'struct_or_union':([0,2,10,22,59,62,63,81,106,108,117,130,137,142,144,145,146,151,154,170,231,240,254,255,274,285,329,333,336,362,371,393,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'declaration_list_opt':([10,63,],[57,111,]),'declaration_list':([10,63,],[59,59,]),'init_declarator_list_opt':([11,61,],[68,68,]),'init_declarator_list':([11,61,],[71,71,]),'init_declarator':([11,61,113,131,],[73,73,213,244,]),'declarator':([11,61,113,131,148,381,],[74,74,74,74,264,264,]),'typeid_declarator':([11,61,72,113,131,148,381,],[75,75,114,75,75,75,75,]),'direct_typeid_declarator':([11,61,69,72,113,131,148,381,],[76,76,112,76,76,76,76,76,]),'declaration_specifiers_no_type_opt':([17,18,19,],[83,86,87,]),'id_init_declarator_list_opt':([22,62,],[89,89,]),'id_init_declarator_list':([22,62,],[91,91,]),'id_init_declarator':([22,62,],[92,92,]),'type_qualifier_list_opt':([26,27,80,116,119,219,361,447,],[95,99,118,218,227,348,446,487,]),'type_qualifier_list':([26,27,80,106,116,119,144,145,146,170,219,254,255,274,329,333,336,361,447,],[97,97,120,151,220,97,151,151,151,151,97,151,151,151,151,151,151,448,97,]),'brace_open':([32,33,57,100,102,104,105,108,111,115,132,154,174,246,252,270,275,340,385,389,463,464,467,468,476,477,480,512,527,530,],[101,106,108,138,143,144,145,108,108,217,217,108,108,372,376,108,108,217,108,465,465,108,108,108,465,465,217,108,108,108,]),'compound_statement':([57,108,111,154,174,270,275,385,464,467,468,512,527,530,],[107,160,212,160,160,160,160,160,160,160,160,160,160,160,]),'parameter_type_list':([81,117,240,362,371,393,],[121,221,367,449,367,367,]),'identifier_list_opt':([81,117,362,],[122,222,450,]),'parameter_list':([81,117,240,362,371,393,],[123,123,123,123,123,123,]),'identifier_list':([81,117,362,],[125,125,125,]),'parameter_declaration':([81,117,231,240,362,371,393,],[126,126,357,126,126,126,126,]),'identifier':([81,108,115,117,118,132,154,166,170,174,179,185,186,187,189,218,227,228,232,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,345,348,349,362,370,382,385,389,399,446,463,464,467,468,469,470,472,475,478,480,487,488,502,512,516,519,520,527,530,],[127,197,197,127,197,197,197,197,197,197,197,197,197,197,197,197,197,197,358,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,439,197,197,127,197,197,197,197,197,197,197,197,197,197,197,197,197,197,506,197,197,197,197,197,197,528,197,197,197,]),'enumerator_list':([101,138,143,372,376,],[139,247,253,458,459,]),'enumerator':([101,138,143,249,372,376,],[140,140,140,374,140,140,]),'struct_declaration_list':([106,144,145,],[146,254,255,]),'struct_declaration':([106,144,145,146,254,255,],[147,147,147,257,257,257,]),'specifier_qualifier_list':([106,144,145,146,170,254,255,274,329,333,336,],[148,148,148,148,280,148,148,280,280,280,280,]),'block_item_list_opt':([108,],[152,]),'block_item_list':([108,],[154,]),'block_item':([108,154,],[155,268,]),'statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[157,157,284,384,387,462,496,498,499,523,531,533,]),'labeled_statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[158,158,158,158,158,158,158,158,158,158,158,158,]),'expression_statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[159,159,159,159,159,159,159,159,159,159,159,159,]),'selection_statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[161,161,161,161,161,161,161,161,161,161,161,161,]),'iteration_statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[162,162,162,162,162,162,162,162,162,162,162,162,]),'jump_statement':([108,154,174,270,275,385,464,467,468,512,527,530,],[163,163,163,163,163,163,163,163,163,163,163,163,]),'expression_opt':([108,154,174,270,275,285,385,399,464,467,468,470,502,512,516,527,530,],[168,168,168,168,168,398,168,471,168,168,168,501,517,168,526,168,168,]),'expression':([108,154,170,174,179,270,274,275,277,282,283,285,303,322,329,333,385,399,464,467,468,469,470,502,512,516,520,527,530,],[171,171,279,171,289,171,279,171,388,395,396,171,403,422,279,279,171,171,171,171,171,500,171,171,171,171,529,171,171,]),'assignment_expression':([108,115,118,132,154,170,174,179,218,227,228,241,270,274,275,277,281,282,283,285,291,303,322,323,329,333,340,348,349,370,385,399,446,464,467,468,469,470,475,480,487,488,502,512,516,520,527,530,],[180,216,226,216,180,180,180,180,226,354,355,226,180,180,180,180,394,180,180,180,402,180,180,425,180,180,216,442,443,226,180,180,226,180,180,180,180,180,504,216,510,511,180,180,180,180,180,180,]),'conditional_expression':([108,115,118,132,154,166,170,174,179,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,322,323,329,333,340,344,348,349,370,382,385,399,446,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[181,181,181,181,181,272,181,181,181,181,181,181,181,272,272,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,272,181,181,181,272,181,181,181,181,181,181,181,181,503,181,181,181,181,181,181,181,181,181,181,]),'unary_expression':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[182,182,182,182,182,273,182,182,182,328,330,273,332,182,182,182,182,273,273,182,182,182,182,182,182,182,182,182,182,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,182,182,182,182,182,273,182,182,182,273,182,273,182,182,273,182,182,182,182,182,273,182,182,182,182,182,182,182,182,182,182,]),'binary_expression':([108,115,118,132,154,166,170,174,179,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,399,446,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'postfix_expression':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'unary_operator':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,]),'cast_expression':([108,115,118,132,154,166,170,174,179,187,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[188,188,188,188,188,188,188,188,188,331,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,466,188,188,466,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'primary_expression':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,]),'constant':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,]),'unified_string_literal':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,]),'unified_wstring_literal':([108,115,118,132,154,166,170,174,179,185,186,187,189,218,227,228,241,251,265,270,274,275,277,281,282,283,285,291,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,329,333,340,344,348,349,370,382,385,389,399,446,463,464,467,468,469,470,472,475,480,487,488,502,512,516,520,527,530,],[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,]),'initializer':([115,132,340,480,],[215,245,435,507,]),'assignment_expression_opt':([118,218,241,370,446,],[223,346,368,455,485,]),'typeid_noparen_declarator':([128,],[234,]),'abstract_declarator_opt':([128,280,],[235,391,]),'direct_typeid_noparen_declarator':([128,236,],[237,359,]),'abstract_declarator':([128,240,280,393,],[239,363,239,363,]),'direct_abstract_declarator':([128,236,240,280,365,392,393,],[243,360,243,243,360,360,243,]),'brace_close':([139,146,152,247,253,254,255,337,434,458,459,497,514,],[248,256,267,373,377,378,379,433,479,494,495,513,524,]),'struct_declarator_list_opt':([148,],[258,]),'struct_declarator_list':([148,],[262,]),'struct_declarator':([148,381,],[263,460,]),'constant_expression':([166,251,265,344,382,],[271,375,383,438,461,]),'type_name':([170,274,329,333,336,],[278,386,430,431,432,]),'assignment_operator':([182,],[291,]),'initializer_list_opt':([217,],[337,]),'initializer_list':([217,465,],[338,497,]),'designation_opt':([217,434,465,514,],[340,480,340,480,]),'designation':([217,434,465,514,],[341,341,341,341,]),'designator_list':([217,434,465,514,],[342,342,342,342,]),'designator':([217,342,434,465,514,],[343,437,343,343,343,]),'parameter_type_list_opt':([240,371,393,],[364,457,364,]),'argument_expression_list':([323,],[423,]),'offsetof_member_designator':([478,],[505,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','cpp_parser.py',22),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','cpp_parser.py',23),
  ('pointer -> AND type_qualifier_list_opt','pointer',2,'p_pointer','cpp_parser.py',24),
  ('pointer -> AND type_qualifier_list_opt pointer','pointer',3,'p_pointer','cpp_parser.py',25),
  ('enum_specifier -> ENUM ID COLON declaration_specifiers brace_open enumerator_list brace_close','enum_specifier',7,'p_enum_specifier_4','cpp_parser.py',31),
  ('enum_specifier -> ENUM TYPEID COLON declaration_specifiers brace_open enumerator_list brace_close','enum_specifier',7,'p_enum_specifier_4','cpp_parser.py',32),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',42),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',42),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',42),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',42),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',42),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',42),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',42),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',109),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',110),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',110),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',109),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',110),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',110),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',109),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',109),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',109),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',109),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',109),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',109),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
